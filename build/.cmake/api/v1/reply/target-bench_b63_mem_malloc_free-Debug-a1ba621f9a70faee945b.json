{
	"artifacts" : 
	[
		{
			"path" : "bench/mem/bench_b63_mem_malloc_free"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"link_directories",
			"target_compile_options",
			"include_directories"
		],
		"files" : 
		[
			"bench/mem/CMakeLists.txt",
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 5,
				"parent" : 0
			},
			{
				"file" : 1
			},
			{
				"command" : 1,
				"file" : 1,
				"line" : 47,
				"parent" : 2
			},
			{
				"command" : 1,
				"file" : 1,
				"line" : 48,
				"parent" : 2
			},
			{
				"command" : 1,
				"file" : 1,
				"line" : 49,
				"parent" : 2
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 38,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 39,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 40,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 41,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 42,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 43,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 44,
				"parent" : 2
			},
			{
				"command" : 3,
				"file" : 1,
				"line" : 45,
				"parent" : 2
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g -g -Og -DDEBUG -march=native -mavx2 -mbmi -fopenmp  -Wno-unused-function -Wno-overlength-strings   -DUSE_AVX2 -fvar-tracking-assignments -O0 "
				},
				{
					"backtrace" : 6,
					"fragment" : "-Ofast"
				},
				{
					"backtrace" : 6,
					"fragment" : "-march=native"
				},
				{
					"fragment" : "-std=gnu++20"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 7,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/fplll/fplll"
				},
				{
					"backtrace" : 8,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/fplll"
				},
				{
					"backtrace" : 9,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/b63/src"
				},
				{
					"backtrace" : 10,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/m4ri"
				},
				{
					"backtrace" : 11,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/ska_sort"
				},
				{
					"backtrace" : 12,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/deps"
				},
				{
					"backtrace" : 13,
					"path" : "/home/duda/Downloads/crypto/lib/cryptanalysislib/src"
				},
				{
					"backtrace" : 14,
					"path" : "/usr/local/include"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "20"
			},
			"sourceIndexes" : 
			[
				0
			]
		}
	],
	"id" : "bench_b63_mem_malloc_free::@28d236de1c389f942107",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g -g -Og -DDEBUG -march=native -mavx2 -mbmi -fopenmp  -Wno-unused-function -Wno-overlength-strings   -DUSE_AVX2 -fvar-tracking-assignments -O0",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"backtrace" : 3,
				"fragment" : "-L/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/fplll/fplll/.libs",
				"role" : "libraryPath"
			},
			{
				"backtrace" : 4,
				"fragment" : "-L/home/duda/Downloads/crypto/lib/cryptanalysislib/deps/m4ri/.libs",
				"role" : "libraryPath"
			},
			{
				"backtrace" : 5,
				"fragment" : "-L/usr/local/lib",
				"role" : "libraryPath"
			}
		],
		"language" : "CXX"
	},
	"name" : "bench_b63_mem_malloc_free",
	"nameOnDisk" : "bench_b63_mem_malloc_free",
	"paths" : 
	{
		"build" : "bench/mem",
		"source" : "bench/mem"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "bench/mem/malloc_free.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
