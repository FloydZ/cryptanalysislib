name: test



on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [ g++-10, g++-11, g++-12 ]

    name: Build & test on ${{ matrix.os }} with ${{ matrix.compiler }}.
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Software
      run: |
        sudo apt-get install -y libmpfr-dev libpng-dev libtbb-dev
    
    - name: Install Google Benchmark
      run: git clone --depth=1 --single-branch --branch v1.7.1 https://github.com/google/benchmark.git benchmark && mkdir -p benchmark/build && cd ./benchmark/build &&  cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_GTEST_TESTS=OFF ../ && make -j

    - name: Install gtest
      run:
        sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/libgtest.a /usr/lib  && sudo cp lib/libgtest_main.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug

    - name: Run build.sh
      run: ./build.sh
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: |
        ./tests/test_build_tree
        ./tests/test_combinations
        ./tests/test_element
        ./tests/test_gaus
        ./tests/test_kArytype
        ./tests/test_label
        ./tests/test_list
        ./tests/test_search
        ./tests/test_stl
        ./tests/test_tree
        ./tests/test_value
        ./tests/alloc/test_alloc_dev
        ./tests/binary/test_binary_32
        ./tests/binary/test_binary_32_align
        ./tests/binary/test_binary_64
        ./tests/binary/test_binary_64_align
        ./tests/binary/test_binary_128
        ./tests/binary/test_binary_128_align
        ./tests/binary/test_binary_256
        ./tests/binary/test_binary_256_align
        ./tests/binary/test_binary_build_tree
        ./tests/binary/test_binary_container
        ./tests/binary/test_binary_container_avx
        ./tests/binary/test_binary_container_cmp 
        ./tests/binary/test_binary_element
        ./tests/binary/test_binary_extended_tree
        ./tests/binary/test_binary_list
        ./tests/binary/test_binary_sort
        ./tests/binary/test_binary_tree
        ./tests/container/test_container_constNonBlockingLinkedList
        ./tests/container/test_container_fq_vector
        ./tests/container/test_container_packed_f3
        ./tests/container/test_container_simple
        ./tests/container/test_container_triple
        ./tests/container/test_container_packed_f3
        ./tests/crypto/test_crypto_md5
        ./tests/crypto/test_crypto_sha1
        ./tests/list/test_list_common
        ./tests/list/test_list_list
        ./tests/list/test_list_parallel
        ./tests/list/test_list_parallel_full
        ./tests/list/test_list_parallel_index
        ./tests/list/enumeration/test_list_enumeration_fq
        ./tests/matrix/test_matrix_binary
        ./tests/matrix/test_matrix_custom_m4ri
        ./tests/matrix/test_matrix_fq
        ./tests/popcount/test_popcount_simple
        ./tests/simd/test_simd_simd
        ./tests/simd/test_simd_avx
        ./tests/sort/test_sort_sorting_algorithms
        ./tests/sort/test_sort_sorting_network
        ./tests/thread/test_thread_simple
        ./tests/thread/test_thread_omp


  Benchmark:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Software
      run: |
        sudo apt-get install -y libmpfr-dev libpng-dev libtbb-dev
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: Install Google Benchmark
      run: git clone --depth=1 --single-branch --branch v1.7.1 https://github.com/google/benchmark.git benchmark && mkdir -p benchmark/build && cd ./benchmark/build &&  cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_GTEST_TESTS=OFF ../ && make -j

    - name: Install gtest
      run:
        sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && sudo cp lib/libgtest.a /usr/lib  && sudo cp lib/libgtest_main.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a

    - name: Run build.sh
      run: ./build.sh
      
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Bench
      run: cd build && 
        ./bench/combinations/bench_b63_combinations_binary            -j  | tee benchmark_bench_b63_combinations_binary.json            &&
        ./bench/combinations/bench_b63_combinations_ternary           -j  | tee benchmark_bench_b63_combinations_ternary.json           &&
        
        ./bench/container/bench_b63_container_get_bits                -j  | tee benchmark_bench_b63_container_get_bits.json             &&
        ./bench/container/bench_b63_container_kAryPackedContainer     -j  | tee benchmark_bench_b63_container_kAryPackedContainer.json  &&
        
        ./bench/label/bench_b63_label_add                             -j  | tee benchmark_bench_b63_label_add.json                      &&
        ./bench/label/bench_b63_label_add_level                       -j  | tee benchmark_bench_b63_label_add_level.json                &&
        ./bench/label/bench_b63_label_equal_level                     -j  | tee benchmark_bench_b63_label_equal_level.json              &&
        ./bench/label/bench_b63_label_sub                             -j  | tee benchmark_bench_b63_label_sub.json                      &&
        ./bench/label/bench_b63_label_sub_level                       -j  | tee benchmark_bench_b63_label_sub_level.json                &&
        
        ./bench/labeltype/bench_b63_labeltype_add                     -j  | tee benchmark_bench_b63_labeltype_add.json                  &&
        ./bench/labeltype/bench_b63_labeltype_sub                     -j  | tee benchmark_bench_b63_labeltype_sub.json                  &&
        
        ./bench/list/bench_b63_list_binarysearch                      -j  | tee benchmark_bench_b63_list_binarysearchjson               &&
        ./bench/list/bench_b63_list_search                            -j  | tee benchmark_bench_b63_list_search.json                    &&
        ./bench/list/bench_b63_list_sort                              -j  | tee benchmark_bench_b63_list_sort                           &&
        
        ./bench/matrix/bench_b63_matrix/gaus                          -j  | tee benchmark_bench_b63_matrix_gaus                         &&
        
        ./bench/mem/bench_b63_mem_malloc_free                         -j  | tee benchmark_bench_b63_mem_malloc_free.json                &&
        
        ./bench/nn/bench_b63_nn_avx2                                  -j  | tee benchmark_bench_b63_nn_avx2.json                        &&
        ./bench/nn/bench_b63_nn_bruteforce                            -j  | tee benchmark_bench_b63_nn_bruteforce.json                  &&
        ./bench/nn/bench_b63_nn_n128_avx2                             -j  | tee benchmark_bench_b63_nn_n128_avx2.json                   &&
        ./bench/nn/bench_b63_nn_opt                                   -j  | tee benchmark_bench_b63_nn_opt.json                         &&
        ./bench/nn/bench_b63_nn_popcount                              -j  | tee benchmark_bench_b63_nn_popcount.json                    &&
        ./bench/nn/bench_b63_nn_sort_nn_on32                          -j  | tee benchmark_bench_b63_nn_sort_nn_on32.json                &&
        ./bench/nn/bench_b63_nn_sort_nn_on64                          -j  | tee benchmark_bench_b63_nn_sort_nn_on64.json                &&
        
        ./bench/search/bench_b63_search_binarysearch                  -j  | tee benchmark_bench_b63_search_binarysearch.json            &&
        ./bench/search/bench_b63_search_internal_parallel_bucket_search  -j  | tee benchmark_bench_b63_search_internal_parallel_bucket_search.json &&
        
        ./bench/sort/bench_b63_sort_binarycontainer_single_limb       -j  | tee benchmark_bench_b63_sort_binarycontainer_single_limb.json       &&
        ./bench/sort/bench_b63_sort_internal_parallel_bucket_sort     -j  | tee benchmark_bench_b63_sort_internal_parallel_bucket_sort.json     &&
        ./bench/sort/bench_b63_sort_sort                              -j  | tee benchmark_bench_b63_sort_sort.json                      &&
        ./bench/sort/bench_stl_stl                                    -j  | tee benchmark_bench_stl_stl.json                            &&
        ./bench/value/bench_b63_value_absolute                        -j  | tee benchmark_bench_b63_value_absolute.json                 &&
        ./bench/value/bench_b63_value_add                             -j  | tee benchmark_bench_b63_value_add.json                      &&
        ./bench/value/bench_b63_value_move_operator                   -j  | tee benchmark_bench_b63_value_move_operator.json

    #- name: benchmark_bench_b63_sort_gbench_sort
    #  uses: benchmark-action/github-action-benchmark@v1
    #  with:
    #    tool: 'googlecpp'
    #    output-file-path: build/benchmark_bench_b63_sort_gbench_sort.json
    #    github-token: ${{ secrets.GITHUB_TOKEN }}
    #    auto-push: true
    #    alert-threshold: '200%'
    #    comment-on-alert: true
    #    fail-on-alert: true
    #    alert-comment-cc-users: '@FloydZ'
    #
    #      #    - name: benchmark_bench_b63_combinations_binary
    #      #      uses: benchmark-action/github-action-benchmark@v1
    #      #      with:
    #      #        tool: 'googlecpp'
    #      #        output-file-path: build/benchmark_bench_b63_combinations_binary.json
    #      #        github-token: ${{ secrets.GITHUB_TOKEN }}
    #      #        auto-push: true
    #      #        alert-threshold: '200%'
    #      #        comment-on-alert: true
    #      #        fail-on-alert: true
    #      #        alert-comment-cc-users: '@FloydZ'
